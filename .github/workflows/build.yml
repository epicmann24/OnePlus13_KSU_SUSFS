name: Build permissions: contents: write actions: write

on: workflow_call: inputs: model: required: true type: string soc: required: true type: string branch: required: true type: string manifest: required: true type: string android_version: required: true type: string kernel_version: required: true type: string

jobs: build-kernel-oneplus-kernelsu-susfs: runs-on: ubuntu-latest

steps:
  - name: Maximize build space
    uses: easimon/maximize-build-space@master
    with:
      root-reserve-mb: 8192
      temp-reserve-mb: 2048
      swap-size-mb: 8192
      remove-dotnet: 'true'
      remove-android: 'true'
      remove-haskell: 'true'
      remove-codeql: 'true'

  - name: Install Repo and Python
    run: |
      sudo apt update
      sudo apt install repo python3 python-is-python3

  - name: Set CONFIG Environment Variable
    run: |
      CONFIG="${{ inputs.model }}"
      echo "CONFIG=$CONFIG" >> $GITHUB_ENV

  - name: Clone AnyKernel3 and Other Dependencies
    run: |
      ANYKERNEL_BRANCH="gki-2.0"
      SUSFS_BRANCH="gki-${{ inputs.android_version }}-${{ inputs.kernel_version }}"
      git clone https://github.com/TheWildJames/AnyKernel3.git -b "$ANYKERNEL_BRANCH"
      git clone https://gitlab.com/simonpunk/susfs4ksu.git -b "$SUSFS_BRANCH"
      git clone https://github.com/TheWildJames/kernel_patches.git

  - name: Initialize and Sync Kernel Source
    run: |
      mkdir -p "$CONFIG"
      cd "$CONFIG"
      repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b ${{ inputs.branch }} -m ${{ inputs.manifest }} --repo-rev=v2.16 --depth=1
      repo --version
      repo --trace sync -c -j$(nproc --all) --no-tags --fail-fast

  - name: Add KernelSU
    run: |
      cd "$CONFIG/kernel_platform"
      curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next
      KSU_VERSION=$(cd ./KernelSU-Next/kernel && git describe --tags --abbrev=0)
      echo "KSUVER=${KSU_VERSION}" >> $GITHUB_ENV

  - name: Apply SUSFS Patches
    run: |
      cd "$CONFIG/kernel_platform"
      cp ../../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ inputs.android_version }}-${{ inputs.kernel_version }}.patch ./common/
      cp ../../susfs4ksu/kernel_patches/fs/* ./common/fs/
      cp ../../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
      cd ./KernelSU-Next
      cp ../../../kernel_patches/next/0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch ./
      patch -p1 --forward < 0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch || true
      cd ../common
      patch -p1 < 50_add_susfs_in_gki-${{ inputs.android_version }}-${{ inputs.kernel_version }}.patch || true

  - name: Apply KSU Hooks
    run: |
      cd "$CONFIG/kernel_platform/common"
      cp ../../../kernel_patches/next/next_hooks.patch ./
      patch -p1 --fuzz=3 < ./next_hooks.patch

  - name: Apply Hide Stuff Patches
    run: |
      cd "$CONFIG/kernel_platform/common"
      cp ../../../kernel_patches/69_hide_stuff.patch ./
      patch -p1 -F 3 < 69_hide_stuff.patch

  - name: Add SUSFS Configuration Settings
    run: |
      cd "$CONFIG/kernel_platform"
      cat <<EOF >> ./common/arch/arm64/configs/gki_defconfig

CONFIG_KSU=y CONFIG_KSU_WITH_KPROBES=n CONFIG_KSU_SUSFS=y CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y CONFIG_KSU_SUSFS_SUS_PATH=y CONFIG_KSU_SUSFS_SUS_MOUNT=y CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y CONFIG_KSU_SUSFS_SUS_KSTAT=y CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n CONFIG_KSU_SUSFS_TRY_UMOUNT=y CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y CONFIG_KSU_SUSFS_SPOOF_UNAME=y CONFIG_KSU_SUSFS_ENABLE_LOG=y CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y CONFIG_KSU_SUSFS_OPEN_REDIRECT=y CONFIG_KSU_SUSFS_SUS_SU=n CONFIG_TMPFS_XATTR=y CONFIG_TMPFS_POSIX_ACL=y EOF

- name: Run sed and perl Commands
    run: |
      cd "$CONFIG/kernel_platform"
      sed -i 's/CONFIG_LTO=n/CONFIG_LTO=y/' ./common/arch/arm64/configs/gki_defconfig
      sed -i 's/CONFIG_LTO_CLANG_FULL=y/CONFIG_LTO_CLANG_THIN=y/' ./common/arch/arm64/configs/gki_defconfig
      sed -i 's/CONFIG_LTO_CLANG_NONE=y/CONFIG_LTO_CLANG_THIN=y/' ./common/arch/arm64/configs/gki_defconfig
      sed -i 's/check_defconfig//' ./common/build.config.gki
      sed -i '$s|echo "\$res"|echo "\$res-Wild+"|' ./common/scripts/setlocalversion
      sed -i '$s|echo "\$res"|echo "\$res-Wild+"|' ./msm-kernel/scripts/setlocalversion
      sed -i '$s|echo "\$res"|echo "\$res-Wild+"|' ./external/dtc/scripts/setlocalversion
      sed -i "/stable_scmversion_cmd/s/-maybe-dirty//g" ./build/kernel/kleaf/impl/stamp.bzl || echo "No stamp.bzl!"
      sed -i 's/-dirty//' ./common/scripts/setlocalversion
      sed -i 's/-dirty//' ./msm-kernel/scripts/setlocalversion
      sed -i 's/-dirty//' ./external/dtc/scripts/setlocalversion
      sed -i 's/-dirty//' ./build/kernel/kleaf/workspace_status_stamp.py || echo "No workspace_status_stamp.py!"
      sed -i '/echo "LTO \$LTO "/i export LTO=thin' ./oplus/build/oplus_setup.sh
      sed -i 's/export REPACK_IMG=true/export REPACK_IMG=false/g' ./oplus/build/oplus_setup.sh
      perl -pi -e 's{UTS_VERSION=\"\$echo \$UTS_VERSION \$CONFIG_FLAGS \$TIMESTAMP \| cut -b -\$UTS_LEN\"}{UTS_VERSION="#1 SMP PREEMPT Sat Apr 20 04:20:00 UTC 2024"}' ./common/scripts/mkcompile_h
      perl -pi -e 's{UTS_VERSION=\"\$echo \$UTS_VERSION \$CONFIG_FLAGS \$TIMESTAMP \| cut -b -\$UTS_LEN\"}{UTS_VERSION="#1 SMP PREEMPT Sat Apr 20 04:20:00 UTC 2024"}' ./msm-kernel/scripts/mkcompile_h

  - name: Workaround Bazel ddk_config Conflicts
    run: |
      cd "$CONFIG/kernel_platform"
      sed -i '/ddk_config(/{N;N;N;N;s/^/#/}' msm-kernel/kernel/kernel/oplus_cpu/game_opt/BUILD.bazel
      sed -i '/ddk_config(/{N;N;N;N;s/^/#/}' msm-kernel/kernel/kernel/oplus_cpu/freqqos_monitor/BUILD.bazel

  - name: Build the Kernel
    run: |
      cd "$CONFIG"
      rm ./kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
      rm ./kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
      if [ -f ./kernel_platform/build_with_bazel.py ]; then
        ./kernel_platform/build_with_bazel.py \
          -t ${{ inputs.soc }} \
          gki \
          --jobs=$(nproc --all) \
          --verbose_failures \
          --config=stamp \
          --user_kmi_symbol_lists=//msm-kernel:android/abi_gki_aarch64_qcom \
          --ignore_missing_projects \
          -o "$(pwd)/out"
      else
        ./kernel_platform/oplus/build/oplus_build_kernel.sh ${{ inputs.soc }} gki
      fi

  - name: Copy Images
    run: |
      cd "$CONFIG"
      cp ./out/dist/Image ../AnyKernel3/Image

  - name: Create ZIP Files for Different Formats
    run: |
      cd ./AnyKernel3
      ZIP_NAME="${{ inputs.model }}_${{ inputs.android_version }}_${{ inputs.kernel_version }}_Next_SUSFS_AnyKernel3.zip"
      zip -r "../$ZIP_NAME" ./

  - name: Upload Build Artifacts
    uses: actions/upload-artifact@v4
    with:
      name: kernel-${{ env.CONFIG }}
      path: |
        *.zip
